{"version":3,"sources":["components/Playlist/Playlist.jsx","components/SoundItemForm/SoundItemForm.jsx","components/App/App.js","reportWebVitals.js","index.js"],"names":["Playlist","props","audioMy","useRef","stopBtn","useState","changeStop","songList","document","querySelectorAll","handleStatusChange","useCallback","onChange","id","author","song","mp3","status","map","list","pause","current","play","console","log","handleStop","currentTime","handleDeleteSong","onDelete","className","icon","faPause","faPlay","ref","src","volume","onClick","faStop","faMinus","SoundItemForm","setAuthor","setSong","setMp3","setStatus","handleSubmit","event","preventDefault","formData","FormData","fileField","querySelector","append","files","fetch","method","body","then","res","ok","alert","e","onSave","enctype","onSubmit","htmlFor","type","name","required","target","value","accept","Button","variant","onVisible","App","isFormVisible","changeFormVisibility","changeList","handleChange","prevState","songItem","currentStatus","handleCreateSong","createNewSongItem","concat","Math","random","toString","substr","handleDelete","filter","visibleForm","visible","Navbar","bg","Brand","href","faMusic","faCopyright","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec6acc45.chunk.js","sourcesContent":["import { useState, useCallback, useRef } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faStop, faPause, faMinus } from '@fortawesome/free-solid-svg-icons';\r\nimport './Playlist.css'\r\n\r\nfunction Playlist(props) {\r\n    const audioMy = useRef();\r\n    const stopBtn = useRef();\r\n    const [isStop, changeStop] = useState(false);\r\n    const songList = [...document.querySelectorAll(\"audio\")];\r\n    const handleStatusChange = useCallback(() => {\r\n        props.onChange(props.id, props.author, props.song, props.mp3, props.status);\r\n        songList.map((list) => list.pause());\r\n        if (props.status === 'stop') {\r\n            songList.map((list) => list.pause());\r\n            audioMy.current.play();\r\n            changeStop(true);\r\n            console.log(stopBtn);\r\n        } else {\r\n            audioMy.current.pause();\r\n            changeStop(false);\r\n        }\r\n    }, [props]);\r\n    const handleStop = useCallback(() => {\r\n        props.onChange(props.id, props.author, props.song, props.mp3, 'play');\r\n        audioMy.current.pause();\r\n        audioMy.current.currentTime = 0;\r\n        changeStop(false);\r\n    }, [props]);\r\n\r\n    const handleDeleteSong = useCallback(() => {\r\n        props.onDelete(props.id);\r\n    }, [props]);\r\n    return (\r\n        <div className=\"row\">\r\n            <div className={`song-item is-${props.status}`}>\r\n                <div className=\"col-1   text-left\">\r\n                    <div className=\"status\">\r\n                        {(props.status === 'stop') ? <FontAwesomeIcon icon={faPause} /> : <FontAwesomeIcon icon={faPlay} />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8 text-left\">\r\n                    <audio ref={audioMy} src={props.mp3} id={props.id} volume=\"0.1\">\r\n                    </audio>\r\n                    <div className=\"song-item-name\">\r\n                        <span className=\"song-author\">\r\n                            {props.author}\r\n                        </span>\r\n                        <span className=\"song-title\">\r\n                            {props.song}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-1 text-left\">\r\n                    <button className=\"sound-btn\" onClick={handleStatusChange}>{(props.status === \"stop\") ? <FontAwesomeIcon icon={faPlay} /> : <FontAwesomeIcon icon={faPause} />}</button>\r\n                </div>\r\n                <div className=\"col-1 text-left\">\r\n                    {(props.status === 'play') ? (<button ref={stopBtn} className=\"sound-btn\" id=\"stop\" onClick={handleStop}><FontAwesomeIcon icon={faStop} /></button>) : null}\r\n                </div>\r\n                <div className=\"col-1 text-right\">\r\n                    <button className=\"sound-btn\" onClick={handleDeleteSong}>\r\n                        <FontAwesomeIcon icon={faMinus} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Playlist;","import { useState, useCallback } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './SoundItemForm.css'\r\n\r\nconst SoundItemForm = (props) => {\r\n    const [author, setAuthor] = useState('');\r\n    const [song, setSong] = useState('');\r\n    const [mp3, setMp3] = useState('');\r\n    const [status, setStatus] = useState('stop');\r\n    const handleSubmit = useCallback((event) => {\r\n        event.preventDefault();\r\n        setStatus('stop');\r\n        const formData = new FormData();\r\n        const fileField = document.querySelector('input[type=\"file\"]');\r\n        formData.append('mp3', fileField.files[0]);\r\n        console.log(fileField.files[0]);\r\n        fetch(\"../mp3/\", {\r\n            method: 'PUT',\r\n            body: formData\r\n        })\r\n            .then(function (res) {\r\n                if (res.ok) {\r\n                    alert(\"Perfect! \");\r\n                } else if (res.status === 401) {\r\n                    alert(\"Oops! \");\r\n                }\r\n            }, function (e) {\r\n                alert(\"Error submitting form!\");\r\n            });\r\n\r\n        props.onSave(author, song, mp3, status);\r\n    }, [author, song, mp3, status, props]);\r\n\r\n    const visibleForm = () => {\r\n        props.onVisible(false);\r\n    };\r\n    return (\r\n        <form enctype=\"multipart/form-data\" method=\"post\" className=\"sound-item-form\" onSubmit={handleSubmit}>\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-2   text-left\">\r\n                    <label className=\"form-label\" htmlFor=\"author\">Author</label>\r\n                </div>\r\n                <div className=\"col-10   text-right\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"author\"\r\n                        id=\"author\"\r\n                        required\r\n                        onChange={(event) => setAuthor(event.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-2   text-left\">\r\n                    <label className=\"form-label\" htmlFor=\"song\">Song</label>\r\n                </div>\r\n                <div className=\"col-10   text-right\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"song\"\r\n                        id=\"song\"\r\n                        required\r\n                        onChange={(event) => setSong(event.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-2   text-left\">\r\n                    <label className=\"form-label\" htmlFor=\"mp3\">Mp3</label>\r\n                </div>\r\n                <div className=\"col-10   text-right\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"file\"\r\n                        name=\"mp3\"\r\n                        id=\"mp3\"\r\n                        accept=\"audio/*\"\r\n                        required\r\n                        onChange={(event) => setMp3(`../mp3/${event.target.files[0].name}`)}\r\n                    // setMp3(event.target.value)\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <Button type=\"submit\" variant=\"outline-info mb-2 mt-3\">Add 🎶</Button>\r\n                <Button type=\"button\" variant=\"outline-info mb-2 mt-3 ml-5\" onClick={visibleForm}>Cancel 🎶</Button>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default SoundItemForm;","import { useCallback, useState } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic, faCopyright } from '@fortawesome/free-solid-svg-icons';\r\nimport Playlist from '../Playlist/Playlist';\r\nimport SoundItemForm from '../SoundItemForm/SoundItemForm';\r\n\r\nimport './App.css';\r\n\r\nfunction changeStatus(currentStatus) {\r\n  if (currentStatus === 'stop') {\r\n    return 'play'\r\n  } else {\r\n    return 'stop'\r\n  }\r\n}\r\n\r\nfunction generateId() {\r\n  return `todo-${Math.random().toString(36).substr(2, 9)}`;\r\n}\r\nfunction App() {\r\n  const [isFormVisible, changeFormVisibility] = useState(false);\r\n  const [list, changeList] = useState([\r\n    { id: \"todo-0001\", author: \"Led Zeppelin\", song: \"Stairway To Heaven\", mp3: \"../mp3/audio1.mp3\", status: \"stop\" },\r\n    { id: \"todo-0002\", author: \"Queen\", song: \"Bohemian Rhapsody\", mp3: \"../mp3/audio2.mp3\", status: \"stop\" },\r\n    { id: \"todo-0003\", author: \"Lynyrd Skynyrd\", song: \"Free Bird\", mp3: \"../mp3/audio3.mp3\", status: \"stop\" },\r\n    { id: \"todo-0004\", author: \"Deep Purple\", song: \"Smoke on the Water\", mp3: \"../mp3/audio4.mp3\", status: \"stop\" },\r\n    { id: \"todo-0005\", author: \"Jimi Hendrix\", song: \"All Along The Watchtower\", mp3: \"../mp3/audio5.mp3\", status: \"stop\" },\r\n    { id: \"todo-0006\", author: \"AC/DC\", song: \"Back In Black\", mp3: \"../mp3/audio6.mp3\", status: \"stop\" },\r\n    { id: \"todo-0007\", author: \"Queen\", song: \"We Will Rock You \", mp3: \"../mp3/audio7.mp3\", status: \"stop\" },\r\n    { id: \"todo-0008\", author: \"Metallica\", song: \"Enter Sandman\", mp3: \"../mp3/audio8.mp3\", status: \"stop\" }\r\n  ])\r\n\r\n  const handleChange = useCallback((id, author, song, mp3, status) => {\r\n    changeList((prevState) => {\r\n      const newState = prevState.map((songItem) => {\r\n        songItem.status = \"stop\";\r\n        if (songItem.id === id) {\r\n          return {\r\n            id: id,\r\n            author: author,\r\n            song: song,\r\n            mp3: mp3,\r\n            status: changeStatus(status),\r\n          };\r\n        }\r\n        return songItem;\r\n      });\r\n      return newState;\r\n    });\r\n  }, []);\r\n\r\n  const handleCreateSong = useCallback(() => {\r\n    changeFormVisibility(!isFormVisible);\r\n  }, []);\r\n\r\n  const createNewSongItem = useCallback((author, song, mp3, status) => {\r\n    changeList((prevState) => {\r\n      const newState = prevState.concat([{ id: generateId(), author, song, mp3, status }]);\r\n      return newState;\r\n    });\r\n    changeFormVisibility(false);\r\n  }, []);\r\n\r\n  const handleDelete = useCallback((id) => {\r\n    changeList((prevState) => {\r\n      const newState = prevState.filter((songItem) => {\r\n        return songItem.id !== id;\r\n      });\r\n      return newState;\r\n    })\r\n  }, []);\r\n\r\n  const visibleForm = useCallback((visible) => {\r\n    changeFormVisibility(visible);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar bg=\"info\">\r\n        <Navbar.Brand className=\"text-light\" href=\"#home\">\r\n          <FontAwesomeIcon icon={faMusic} className=\"logo-icon mr-3\" />\r\n        Audio list\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      <div className=\"container-fluid\">\r\n        {list.map((songList) => {\r\n          return (\r\n            <Playlist\r\n              key={songList.id}\r\n              id={songList.id}\r\n              author={songList.author}\r\n              song={songList.song}\r\n              mp3={songList.mp3}\r\n              status={songList.status}\r\n              onChange={handleChange}\r\n              onDelete={handleDelete}\r\n            />\r\n          )\r\n        })}\r\n        <div className=\"text-center\">\r\n          <Button variant=\"outline-info mb-3\" onClick={handleCreateSong}>New 🎶</Button>\r\n        </div>\r\n        {isFormVisible ? (<SoundItemForm onSave={createNewSongItem} onVisible={visibleForm} />) : null}\r\n      </div>\r\n      <Navbar bg=\"info\" className=\"justify-content-end footer\">\r\n        <Navbar.Brand className=\"text-light\" href=\"#home\">\r\n          <FontAwesomeIcon icon={faCopyright} className=\"logo-icon mr-3\" />\r\n        2021\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}