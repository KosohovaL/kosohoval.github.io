{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_lesson\\\\playlist\\\\src\\\\components\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport Playlist from '../Playlist/Playlist';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction changeStatus(currentStatus) {\n  if (currentStatus === 'stop') {\n    return 'play';\n  } else {\n    return 'stop';\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [list, changeList] = useState([{\n    key: \"0001\",\n    author: \"Led Zeppelin\",\n    song: \"Stairway To Heaven\",\n    mp3: \"audio1.mp3\",\n    status: \"stop\"\n  }, {\n    key: \"0002\",\n    author: \"Queen\",\n    song: \"Bohemian Rhapsody\",\n    mp3: \"audio2.mp3\",\n    status: \"stop\"\n  }, {\n    key: \"0003\",\n    author: \"Lynyrd Skynyrd\",\n    song: \"Free Bird\",\n    mp3: \"audio3.mp3\",\n    status: \"stop\"\n  }, {\n    key: \"0004\",\n    author: \"Deep Purple\",\n    song: \"Smoke on the Water\",\n    mp3: \"audio4.mp3\",\n    status: \"stop\"\n  }, {\n    key: \"0005\",\n    author: \"Jimi Hendrix\",\n    song: \"All Along The Watchtower\",\n    mp3: \"audio5.mp3\",\n    status: \"stop\"\n  }, {\n    key: \"0006\",\n    author: \"AC/DC\",\n    song: \"Back In Black\",\n    mp3: \"audio6.mp3\",\n    status: \"stop\"\n  }, {\n    key: \"0007\",\n    author: \"Queen\",\n    song: \"We Will Rock You \",\n    mp3: \"audio7.mp3\",\n    status: \"stop\"\n  }, {\n    key: \"0008\",\n    author: \"Metallica\",\n    song: \"Enter Sandman\",\n    mp3: \"audio8.mp3\",\n    status: \"stop\"\n  }]);\n  const handleChange = useCallback((key, author, song, mp3, status) => {\n    changeList(prevState => {\n      const newState = prevState.map(songItem => {\n        if (songItem.key === key) {\n          return {\n            key: key,\n            author: author,\n            song: song,\n            mp3: mp3,\n            status: changeStatus(status)\n          };\n        }\n\n        return songItem;\n      });\n      return newState;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Song list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), list.map(songList => {\n      return /*#__PURE__*/_jsxDEV(Playlist, {\n        author: songList.author,\n        song: songList.song,\n        mp3: songList.mp3,\n        status: songList.status,\n        onChange: handleChange\n      }, songList.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mtacExhjEPun4yrWbmAjAyeWF5k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/react_lesson/playlist/src/components/App/App.js"],"names":["useCallback","useState","Playlist","changeStatus","currentStatus","App","list","changeList","key","author","song","mp3","status","handleChange","prevState","newState","map","songItem","songList"],"mappings":"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","sourcesContent":["import { useCallback, useState } from 'react';\nimport Playlist from '../Playlist/Playlist'\nimport './App.css';\n\nfunction changeStatus(currentStatus) {\n  if (currentStatus === 'stop') {\n    return 'play'\n  } else {\n    return 'stop'\n  }\n}\n\nfunction App() {\n  const [list, changeList] = useState([\n    { key: \"0001\", author: \"Led Zeppelin\", song: \"Stairway To Heaven\", mp3: \"audio1.mp3\", status: \"stop\" },\n    { key: \"0002\", author: \"Queen\", song: \"Bohemian Rhapsody\", mp3: \"audio2.mp3\", status: \"stop\" },\n    { key: \"0003\", author: \"Lynyrd Skynyrd\", song: \"Free Bird\", mp3: \"audio3.mp3\", status: \"stop\" },\n    { key: \"0004\", author: \"Deep Purple\", song: \"Smoke on the Water\", mp3: \"audio4.mp3\", status: \"stop\" },\n    { key: \"0005\", author: \"Jimi Hendrix\", song: \"All Along The Watchtower\", mp3: \"audio5.mp3\", status: \"stop\" },\n    { key: \"0006\", author: \"AC/DC\", song: \"Back In Black\", mp3: \"audio6.mp3\", status: \"stop\" },\n    { key: \"0007\", author: \"Queen\", song: \"We Will Rock You \", mp3: \"audio7.mp3\", status: \"stop\" },\n    { key: \"0008\", author: \"Metallica\", song: \"Enter Sandman\", mp3: \"audio8.mp3\", status: \"stop\" }\n  ])\n\n  const handleChange = useCallback((key, author, song, mp3, status) => {\n    changeList((prevState) => {\n      const newState = prevState.map((songItem) => {\n        if (songItem.key === key) {\n          return {\n            key: key,\n            author: author,\n            song: song,\n            mp3: mp3,\n            status: changeStatus(status),\n          };\n        }\n        return songItem;\n      });\n      return newState;\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Song list</h1>\n      {list.map((songList) => {\n        return (\n          <Playlist\n            key={songList.key}\n            author={songList.author}\n            song={songList.song}\n            mp3={songList.mp3}\n            status={songList.status}\n            onChange={handleChange}\n          />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}