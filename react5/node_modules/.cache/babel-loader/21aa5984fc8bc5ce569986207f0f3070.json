{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_lesson\\\\playlist\\\\src\\\\components\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport Playlist from '../Playlist/Playlist';\nimport SoundItemForm from '../SoundItemForm/SoundItemForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction changeStatus(currentStatus) {\n  if (currentStatus === 'stop') {\n    return 'play';\n  } else {\n    return 'stop';\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [isFormVisible, changeFormVisibility] = useState(false);\n  const [list, changeList] = useState([{\n    id: \"0001\",\n    author: \"Led Zeppelin\",\n    song: \"Stairway To Heaven\",\n    mp3: \"../mp3/audio1.mp3\",\n    status: \"stop\"\n  }, {\n    id: \"0002\",\n    author: \"Queen\",\n    song: \"Bohemian Rhapsody\",\n    mp3: \"../mp3/audio2.mp3\",\n    status: \"stop\"\n  }, {\n    id: \"0003\",\n    author: \"Lynyrd Skynyrd\",\n    song: \"Free Bird\",\n    mp3: \"../mp3/audio3.mp3\",\n    status: \"stop\"\n  }, {\n    id: \"0004\",\n    author: \"Deep Purple\",\n    song: \"Smoke on the Water\",\n    mp3: \"../mp3/audio4.mp3\",\n    status: \"stop\"\n  }, {\n    id: \"0005\",\n    author: \"Jimi Hendrix\",\n    song: \"All Along The Watchtower\",\n    mp3: \"../mp3/audio5.mp3\",\n    status: \"stop\"\n  }, {\n    id: \"0006\",\n    author: \"AC/DC\",\n    song: \"Back In Black\",\n    mp3: \"../mp3/audio6.mp3\",\n    status: \"stop\"\n  }, {\n    id: \"0007\",\n    author: \"Queen\",\n    song: \"We Will Rock You \",\n    mp3: \"../mp3/audio7.mp3\",\n    status: \"stop\"\n  }, {\n    id: \"0008\",\n    author: \"Metallica\",\n    song: \"Enter Sandman\",\n    mp3: \"../mp3/audio8.mp3\",\n    status: \"stop\"\n  }]);\n  const handleChange = useCallback((id, author, song, mp3, status) => {\n    changeList(prevState => {\n      const newState = prevState.map(songItem => {\n        if (songItem.id === id) {\n          return {\n            id: id,\n            author: author,\n            song: song,\n            mp3: mp3,\n            status: changeStatus(status)\n          };\n        }\n\n        return songItem;\n      });\n      return newState;\n    });\n  }, []);\n  const handleCreateSong = useCallback(() => {\n    changeFormVisibility(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Song list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), list.map(songList => {\n      return /*#__PURE__*/_jsxDEV(Playlist, {\n        id: songList.id,\n        author: songList.author,\n        song: songList.song,\n        mp3: songList.mp3,\n        status: songList.status,\n        onChange: handleChange\n      }, songList.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-form\",\n        onClick: handleCreateSong,\n        children: \"Add \\uD83C\\uDFB6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), isFormVisible ? /*#__PURE__*/_jsxDEV(SoundItemForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iNzx3KKFow9ffmkXECzPmRTkUyY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/react_lesson/playlist/src/components/App/App.js"],"names":["useCallback","useState","Playlist","SoundItemForm","changeStatus","currentStatus","App","isFormVisible","changeFormVisibility","list","changeList","id","author","song","mp3","status","handleChange","prevState","newState","map","songItem","handleCreateSong","songList"],"mappings":"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","sourcesContent":["import { useCallback, useState } from 'react';\nimport Playlist from '../Playlist/Playlist';\nimport SoundItemForm from '../SoundItemForm/SoundItemForm';\n\nimport './App.css';\n\nfunction changeStatus(currentStatus) {\n  if (currentStatus === 'stop') {\n    return 'play'\n  } else {\n    return 'stop'\n  }\n}\n\nfunction App() {\n  const [isFormVisible, changeFormVisibility] = useState(false);\n  const [list, changeList] = useState([\n    { id: \"0001\", author: \"Led Zeppelin\", song: \"Stairway To Heaven\", mp3: \"../mp3/audio1.mp3\", status: \"stop\" },\n    { id: \"0002\", author: \"Queen\", song: \"Bohemian Rhapsody\", mp3: \"../mp3/audio2.mp3\", status: \"stop\" },\n    { id: \"0003\", author: \"Lynyrd Skynyrd\", song: \"Free Bird\", mp3: \"../mp3/audio3.mp3\", status: \"stop\" },\n    { id: \"0004\", author: \"Deep Purple\", song: \"Smoke on the Water\", mp3: \"../mp3/audio4.mp3\", status: \"stop\" },\n    { id: \"0005\", author: \"Jimi Hendrix\", song: \"All Along The Watchtower\", mp3: \"../mp3/audio5.mp3\", status: \"stop\" },\n    { id: \"0006\", author: \"AC/DC\", song: \"Back In Black\", mp3: \"../mp3/audio6.mp3\", status: \"stop\" },\n    { id: \"0007\", author: \"Queen\", song: \"We Will Rock You \", mp3: \"../mp3/audio7.mp3\", status: \"stop\" },\n    { id: \"0008\", author: \"Metallica\", song: \"Enter Sandman\", mp3: \"../mp3/audio8.mp3\", status: \"stop\" }\n  ])\n\n  const handleChange = useCallback((id, author, song, mp3, status) => {\n    changeList((prevState) => {\n      const newState = prevState.map((songItem) => {\n        if (songItem.id === id) {\n          return {\n            id: id,\n            author: author,\n            song: song,\n            mp3: mp3,\n            status: changeStatus(status),\n          };\n        }\n        return songItem;\n      });\n      return newState;\n    });\n  }, []);\n\n  const handleCreateSong = useCallback(() => {\n    changeFormVisibility(true);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Song list</h1>\n      {list.map((songList) => {\n        return (\n          <Playlist\n            key={songList.id}\n            id={songList.id}\n            author={songList.author}\n            song={songList.song}\n            mp3={songList.mp3}\n            status={songList.status}\n            onChange={handleChange}\n          />\n        )\n      })}\n      <div className=\"centered\">\n        <button className=\"btn-form\" onClick={handleCreateSong}>Add ðŸŽ¶</button>\n      </div>\n      {isFormVisible ? (<SoundItemForm />) : null}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}