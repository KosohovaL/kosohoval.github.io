[{"D:\\react_lesson\\list09\\src\\index.js":"1","D:\\react_lesson\\list09\\src\\reportWebVitals.js":"2","D:\\react_lesson\\list09\\src\\components\\App\\App.js":"3","D:\\react_lesson\\list09\\src\\components\\Playlist\\Playlist.jsx":"4","D:\\react_lesson\\list09\\src\\components\\SoundItemForm\\SoundItemForm.jsx":"5","D:\\GitHub\\kosohoval.github.io\\react5\\src\\index.js":"6","D:\\GitHub\\kosohoval.github.io\\react5\\src\\reportWebVitals.js":"7","D:\\GitHub\\kosohoval.github.io\\react5\\src\\components\\App\\App.js":"8","D:\\GitHub\\kosohoval.github.io\\react5\\src\\components\\Playlist\\Playlist.jsx":"9","D:\\GitHub\\kosohoval.github.io\\react5\\src\\components\\SoundItemForm\\SoundItemForm.jsx":"10"},{"size":580,"mtime":1617654188000,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1617526364000,"results":"13","hashOfConfig":"12"},{"size":4184,"mtime":1617913894000,"results":"14","hashOfConfig":"12"},{"size":3043,"mtime":1617911166000,"results":"15","hashOfConfig":"12"},{"size":3670,"mtime":1617976902329,"results":"16","hashOfConfig":"12"},{"size":580,"mtime":1617654188000,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1617526364000,"results":"19","hashOfConfig":"18"},{"size":4184,"mtime":1617913894000,"results":"20","hashOfConfig":"18"},{"size":3043,"mtime":1617911166000,"results":"21","hashOfConfig":"18"},{"size":3670,"mtime":1617976902329,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"16b4a6x",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1adah6n",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react_lesson\\list09\\src\\index.js",[],["46","47"],"D:\\react_lesson\\list09\\src\\reportWebVitals.js",[],"D:\\react_lesson\\list09\\src\\components\\App\\App.js",["48"],"import { useCallback, useState } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic, faCopyright } from '@fortawesome/free-solid-svg-icons';\r\nimport Playlist from '../Playlist/Playlist';\r\nimport SoundItemForm from '../SoundItemForm/SoundItemForm';\r\n\r\nimport './App.css';\r\n\r\nfunction changeStatus(currentStatus) {\r\n  if (currentStatus === 'stop') {\r\n    return 'play'\r\n  } else {\r\n    return 'stop'\r\n  }\r\n}\r\n\r\nfunction generateId() {\r\n  return `todo-${Math.random().toString(36).substr(2, 9)}`;\r\n}\r\nfunction App() {\r\n  const [isFormVisible, changeFormVisibility] = useState(false);\r\n  const [list, changeList] = useState([\r\n    { id: \"todo-0001\", author: \"Led Zeppelin\", song: \"Stairway To Heaven\", mp3: \"../mp3/audio1.mp3\", status: \"stop\" },\r\n    { id: \"todo-0002\", author: \"Queen\", song: \"Bohemian Rhapsody\", mp3: \"../mp3/audio2.mp3\", status: \"stop\" },\r\n    { id: \"todo-0003\", author: \"Lynyrd Skynyrd\", song: \"Free Bird\", mp3: \"../mp3/audio3.mp3\", status: \"stop\" },\r\n    { id: \"todo-0004\", author: \"Deep Purple\", song: \"Smoke on the Water\", mp3: \"../mp3/audio4.mp3\", status: \"stop\" },\r\n    { id: \"todo-0005\", author: \"Jimi Hendrix\", song: \"All Along The Watchtower\", mp3: \"../mp3/audio5.mp3\", status: \"stop\" },\r\n    { id: \"todo-0006\", author: \"AC/DC\", song: \"Back In Black\", mp3: \"../mp3/audio6.mp3\", status: \"stop\" },\r\n    { id: \"todo-0007\", author: \"Queen\", song: \"We Will Rock You \", mp3: \"../mp3/audio7.mp3\", status: \"stop\" },\r\n    { id: \"todo-0008\", author: \"Metallica\", song: \"Enter Sandman\", mp3: \"../mp3/audio8.mp3\", status: \"stop\" }\r\n  ])\r\n\r\n  const handleChange = useCallback((id, author, song, mp3, status) => {\r\n    changeList((prevState) => {\r\n      const newState = prevState.map((songItem) => {\r\n        songItem.status = \"stop\";\r\n        if (songItem.id === id) {\r\n          return {\r\n            id: id,\r\n            author: author,\r\n            song: song,\r\n            mp3: mp3,\r\n            status: changeStatus(status),\r\n          };\r\n        }\r\n        return songItem;\r\n      });\r\n      return newState;\r\n    });\r\n  }, []);\r\n\r\n  const handleCreateSong = useCallback(() => {\r\n    changeFormVisibility(!isFormVisible);\r\n  }, []);\r\n\r\n  const createNewSongItem = useCallback((author, song, mp3, status) => {\r\n    changeList((prevState) => {\r\n      const newState = prevState.concat([{ id: generateId(), author, song, mp3, status }]);\r\n      return newState;\r\n    });\r\n    changeFormVisibility(false);\r\n  }, []);\r\n\r\n  const handleDelete = useCallback((id) => {\r\n    changeList((prevState) => {\r\n      const newState = prevState.filter((songItem) => {\r\n        return songItem.id !== id;\r\n      });\r\n      return newState;\r\n    })\r\n  }, []);\r\n\r\n  const visibleForm = useCallback((visible) => {\r\n    changeFormVisibility(visible);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar bg=\"info\">\r\n        <Navbar.Brand className=\"text-light\" href=\"#home\">\r\n          <FontAwesomeIcon icon={faMusic} className=\"logo-icon mr-3\" />\r\n        Audio list\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      <div className=\"container-fluid\">\r\n        {list.map((songList) => {\r\n          return (\r\n            <Playlist\r\n              key={songList.id}\r\n              id={songList.id}\r\n              author={songList.author}\r\n              song={songList.song}\r\n              mp3={songList.mp3}\r\n              status={songList.status}\r\n              onChange={handleChange}\r\n              onDelete={handleDelete}\r\n            />\r\n          )\r\n        })}\r\n        <div className=\"text-center\">\r\n          <Button variant=\"outline-info mb-3\" onClick={handleCreateSong}>New ðŸŽ¶</Button>\r\n        </div>\r\n        {isFormVisible ? (<SoundItemForm onSave={createNewSongItem} onVisible={visibleForm} />) : null}\r\n      </div>\r\n      <Navbar bg=\"info\" className=\"justify-content-end footer\">\r\n        <Navbar.Brand className=\"text-light\" href=\"#home\">\r\n          <FontAwesomeIcon icon={faCopyright} className=\"logo-icon mr-3\" />\r\n        2021\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\react_lesson\\list09\\src\\components\\Playlist\\Playlist.jsx",["49","50"],"import { useState, useCallback, useRef } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faStop, faPause, faMinus } from '@fortawesome/free-solid-svg-icons';\r\nimport './Playlist.css'\r\n\r\nfunction Playlist(props) {\r\n    const audioMy = useRef();\r\n    const stopBtn = useRef();\r\n    const [isStop, changeStop] = useState(false);\r\n    const songList = [...document.querySelectorAll(\"audio\")];\r\n    const handleStatusChange = useCallback(() => {\r\n        props.onChange(props.id, props.author, props.song, props.mp3, props.status);\r\n        songList.map((list) => list.pause());\r\n        if (props.status === 'stop') {\r\n            songList.map((list) => list.pause());\r\n            audioMy.current.play();\r\n            changeStop(true);\r\n            console.log(stopBtn);\r\n        } else {\r\n            audioMy.current.pause();\r\n            changeStop(false);\r\n        }\r\n    }, [props]);\r\n    const handleStop = useCallback(() => {\r\n        props.onChange(props.id, props.author, props.song, props.mp3, 'play');\r\n        audioMy.current.pause();\r\n        audioMy.current.currentTime = 0;\r\n        changeStop(false);\r\n    }, [props]);\r\n\r\n    const handleDeleteSong = useCallback(() => {\r\n        props.onDelete(props.id);\r\n    }, [props]);\r\n    return (\r\n        <div className=\"row\">\r\n            <div className={`song-item is-${props.status}`}>\r\n                <div className=\"col-1   text-left\">\r\n                    <div className=\"status\">\r\n                        {(props.status === 'stop') ? <FontAwesomeIcon icon={faPause} /> : <FontAwesomeIcon icon={faPlay} />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8 text-left\">\r\n                    <audio ref={audioMy} src={props.mp3} id={props.id} volume=\"0.1\">\r\n                    </audio>\r\n                    <div className=\"song-item-name\">\r\n                        <span className=\"song-author\">\r\n                            {props.author}\r\n                        </span>\r\n                        <span className=\"song-title\">\r\n                            {props.song}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-1 text-left\">\r\n                    <button className=\"sound-btn\" onClick={handleStatusChange}>{(props.status === \"stop\") ? <FontAwesomeIcon icon={faPlay} /> : <FontAwesomeIcon icon={faPause} />}</button>\r\n                </div>\r\n                <div className=\"col-1 text-left\">\r\n                    {(props.status === 'play') ? (<button ref={stopBtn} className=\"sound-btn\" id=\"stop\" onClick={handleStop}><FontAwesomeIcon icon={faStop} /></button>) : null}\r\n                </div>\r\n                <div className=\"col-1 text-right\">\r\n                    <button className=\"sound-btn\" onClick={handleDeleteSong}>\r\n                        <FontAwesomeIcon icon={faMinus} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Playlist;","D:\\react_lesson\\list09\\src\\components\\SoundItemForm\\SoundItemForm.jsx",[],"D:\\GitHub\\kosohoval.github.io\\react5\\src\\index.js",[],"D:\\GitHub\\kosohoval.github.io\\react5\\src\\reportWebVitals.js",[],"D:\\GitHub\\kosohoval.github.io\\react5\\src\\components\\App\\App.js",["51"],"D:\\GitHub\\kosohoval.github.io\\react5\\src\\components\\Playlist\\Playlist.jsx",["52","53"],"D:\\GitHub\\kosohoval.github.io\\react5\\src\\components\\SoundItemForm\\SoundItemForm.jsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":56,"column":6,"nodeType":"60","endLine":56,"endColumn":8,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":9,"column":12,"nodeType":"64","messageId":"65","endLine":9,"endColumn":18},{"ruleId":"58","severity":1,"message":"66","line":23,"column":8,"nodeType":"60","endLine":23,"endColumn":15,"suggestions":"67"},{"ruleId":"58","severity":1,"message":"59","line":56,"column":6,"nodeType":"60","endLine":56,"endColumn":8,"suggestions":"68"},{"ruleId":"62","severity":1,"message":"63","line":9,"column":12,"nodeType":"64","messageId":"65","endLine":9,"endColumn":18},{"ruleId":"58","severity":1,"message":"66","line":23,"column":8,"nodeType":"60","endLine":23,"endColumn":15,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'isFormVisible'. Either include it or remove the dependency array. You can also do a functional update 'changeFormVisibility(i => ...)' if you only need 'isFormVisible' in the 'changeFormVisibility' call.","ArrayExpression",["72"],"no-unused-vars","'isStop' is assigned a value but never used.","Identifier","unusedVar","React Hook useCallback has a missing dependency: 'songList'. Either include it or remove the dependency array.",["73"],["74"],["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"76","fix":"80"},{"desc":"78","fix":"81"},"Update the dependencies array to be: [isFormVisible]",{"range":"82","text":"83"},"Update the dependencies array to be: [props, songList]",{"range":"84","text":"85"},{"range":"86","text":"83"},{"range":"87","text":"85"},[2287,2289],"[isFormVisible]",[925,932],"[props, songList]",[2287,2289],[925,932]]